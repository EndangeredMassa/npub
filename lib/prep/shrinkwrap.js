// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var fs, getDevDependencies, log, move, shrinkwrap, spawn, temp;
  temp = require('temp');
  fs = require('fs');
  log = require('../log');
  spawn = require('child_process').spawn;
  move = function (directories, sourceDirectory, targetDirectory) {
    return function (accum$) {
      var dependency, source, target;
      for (var i$ = 0, length$ = directories.length; i$ < length$; ++i$) {
        dependency = directories[i$];
        source = '' + sourceDirectory + '/' + dependency;
        target = '' + targetDirectory + '/' + dependency;
        accum$.push(fs.renameSync(source, target));
      }
      return accum$;
    }.call(this, []);
  };
  shrinkwrap = function (directory, callback) {
    var npmProcess;
    log('shrinkwrap (ignoring but preserving devDependencies)');
    npmProcess = spawn('npm', ['shrinkwrap'], {
      cwd: directory,
      stdio: 'inherit'
    });
    return npmProcess.on('exit', callback);
  };
  getDevDependencies = function (directory) {
    var devDependencies;
    devDependencies = require('' + directory + '/package.json').devDependencies;
    if (!(null != devDependencies))
      return;
    return Object.keys(devDependencies);
  };
  module.exports = function (directory, done) {
    var devDependencies, nodeModules, tempDirectory;
    devDependencies = getDevDependencies(directory);
    tempDirectory = null;
    nodeModules = '' + directory + '/node_modules';
    if (null != devDependencies) {
      tempDirectory = temp.mkdirSync({ prefix: '.npub' });
      move(devDependencies, nodeModules, tempDirectory);
    }
    return shrinkwrap(directory, function (exitCode) {
      if (null != devDependencies)
        move(devDependencies, tempDirectory, nodeModules);
      return done();
    });
  };
}.call(this);
