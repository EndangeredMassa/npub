// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var changelog, commitChanges, endIf, ensureCleanStage, fs, git, license, openEditor, test, updateVersion;
  license = require('./license');
  ensureCleanStage = require('./clean-stage');
  changelog = require('./changelog');
  openEditor = require('./editor');
  updateVersion = require('./version');
  commitChanges = require('./commit-changes');
  test = require('./test');
  git = require('./git');
  fs = require('fs');
  endIf = function (exitCodeOrError, message) {
    if (!(null != exitCodeOrError))
      return;
    if (exitCodeOrError instanceof Error) {
      console.error('[npub] ' + exitCodeOrError.message);
      return process.exit(1);
    } else {
      if (exitCodeOrError === 0)
        return;
      if (null != message)
        message;
      else
        message = 'exited with ' + exitCodeOrError;
      console.error('[npub] ' + message);
      return process.exit(exitCodeOrError);
    }
  };
  module.exports = function (dir, version, config) {
    return ensureCleanStage(dir, function (error) {
      endIf(error);
      license(dir, config);
      return ensureCleanStage(dir, function (error) {
        endIf(error);
        return test(dir, function (error) {
          endIf(error);
          return changelog.build(dir, function (tempChangelog) {
            var tempChangelogPath;
            tempChangelogPath = changelog.write(tempChangelog);
            return openEditor(tempChangelogPath, function (error) {
              if (null != error) {
                fs.unlinkSync(tempChangelogPath);
                endIf(error);
              }
              changelog.update(dir, tempChangelogPath);
              updateVersion(dir, version);
              return commitChanges(dir, version, function () {
                return git.tag(dir, 'v' + version, function () {
                  return console.log('tagged!');
                });
              });
            });
          });
        });
      });
    });
  };
}.call(this);
